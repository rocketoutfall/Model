makeHM(5, Inv20)
makeHM(6, Inv19)
#Testing
i=1
HMdata=DR20
#colnames(HMdata)  <- c("Bed","Bank", "Upland")
title <- paste("C", CH[i], " Functional Type Density: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(brewer.pal(9, "Greens"))(256)
colseq <- seq(0,max(HMdata)+1,by=1)
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "From center of creek",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
i=1
HMdata=DR20
colnames(HMdata)  <- c("Bed","Bank", "Upland")
title <- paste("C", CH[i], " Functional Type Density: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(brewer.pal(9, "Greens"))(256)
colseq <- seq(0,max(HMdata)+1,by=1)
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "From center of creek",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
DR19 <- ftsummation(19, "FT", "DR", 18)
SR19 <- ftsummation(19, "FT", "SR", 18)
DR20 <- ftsummation(20, "FT", "DR", 7)
SR20 <- ftsummation(20, "FT", "SR", 7)
Inv19 <- ftsummation(19, "N_I", "0", 18)
Inv20 <- ftsummation(20, "N_I", "0", 7)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
allplants(19, 18, "FT")
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
DR19 <- ftsummation(19, "FT", "DR", 18)
SR19 <- ftsummation(19, "FT", "SR", 18)
DR20 <- ftsummation(20, "FT", "DR", 7)
SR20 <- ftsummation(20, "FT", "SR", 7)
Inv19 <- ftsummation(19, "N_I", "0", 18)
Inv20 <- ftsummation(20, "N_I", "0", 7)
View(Inv20)
View(Inv19)
library(readr)
X5Bromu_0 <- read_csv("C:/Users/Elise/Desktop/GitHub/sparrow925.github.io/Model/Data/Plants20/N_I/5Bromu-0.csv")
View(X5Bromu_0)
library(readr)
X19Stipa_0 <- read_csv("C:/Users/Elise/Desktop/GitHub/sparrow925.github.io/Model/Data/Plants20/N_I/19Stipa-0.csv")
View(X19Stipa_0)
X5Bromu_0 + X19Stipa_0
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = "0")
match
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = "*0$")
match
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = "*0")
match
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = "0$")
match
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = ".*0$")
match
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = ".0$")
match
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = ".*0")
match
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = ".*\0$")
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = ".*0$")
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = ".*\0$")
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = ".*\1$")
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = ".*\0$")
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = ".*\\0$")
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = "0$")
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = "*0")
match
match <- list.files(path = file.path(getwd(), "Data", paste("Plants", 20, sep=""), "N_I"), pattern = "*-0")
match
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
DR19 <- ftsummation(19, "FT", "DR", 18)
SR19 <- ftsummation(19, "FT", "SR", 18)
DR20 <- ftsummation(20, "FT", "DR", 7)
SR20 <- ftsummation(20, "FT", "SR", 7)
Inv19 <- ftsummation(19, "N_I", "0", 18)
Inv20 <- ftsummation(20, "N_I", "0", 7)
makeHM(1, DR20)
makeHM(2, SR20)
makeHM(3, DR19)
makeHM(4, SR19)
makeHM(5, Inv20)
makeHM(6, Inv19)
FT <- c("DR20", "SR20", "DR19", "SR19", "Inv20", "Inv19")
type <- c("Deep-Rooted", "Shallow-Rooted", "Deep-Rooted", "Shallow-Rooted", "Invasive Grass", "Invasive ")
CH <- c(20, 20, 19, 19, 20, 19)
#Testing
# Idea for keeping scale relative?
# btw max in any species plot is 6
# http://stackoverflow.com/questions/33126894/keep-scale-of-bubbles-consistent-across-multiple-maps-using-draw-bubble-in-mappl
library(RColorBrewer)
library(lattice)
i=1
HMdata=DR20
colnames(HMdata)  <- c("Bed","Bank", "Upland")
title <- paste("C", CH[i], " Functional Type Density: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(brewer.pal(9, "Greens"))(256)
colseq <- seq(0,max(HMdata)+1,by=1)
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "From center of creek",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
makeHM(1, DR20)
makeHM(2, SR20)
makeHM(3, DR19)
makeHM(4, SR19)
makeHM(5, Inv20)
makeHM(6, Inv19)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
makeHM(1, DR20)
makeHM(2, SR20)
makeHM(3, DR19)
makeHM(4, SR19)
makeHM(5, Inv20)
makeHM(6, Inv19)
DR19 <- ftsummation(19, "FT", "DR", 18)
SR19 <- ftsummation(19, "FT", "SR", 18)
DR20 <- ftsummation(20, "FT", "DR", 7)
SR20 <- ftsummation(20, "FT", "SR", 7)
Inv19 <- ftsummation(19, "N_I", "0", 18)
Inv20 <- ftsummation(20, "N_I", "0", 7)
makeHM(1, DR20)
makeHM(2, SR20)
makeHM(3, DR19)
makeHM(4, SR19)
makeHM(5, Inv20)
makeHM(6, Inv19)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
Inv19 <- ftsummation(19, "Habitat", "T", 18)
Tree19 <- ftsummation(19, "Habitat", "T", 18)
View(Inv19)
View(Inv19)
View(Tree19)
View(Tree19)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
makeHM(7, Tree19)
Grass19 <- ftsummation(19, "Habitat", "-*G", 18)
Grass19 <- ftsummation(19, "Habitat", ".-*G", 18)
View(Grass19)
View(Grass19)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
Grass19 <- ftsummation(19, "Habitat", ".-*G", 18)
makeHM(8, Grass19)
Tree20 <- ftsummation(20, "Habitat", "T", 7)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
Tree20 <- ftsummation(20, "Habitat", "T", 7)
makeHM(7, Tree20)
makeHM(9, Tree20)
View(Tree20)
View(Tree20)
allplants(19, 18, "Habitat")
allplants(20, 7, "Habitat")
Tree20 <- ftsummation(20, "Habitat", "T", 7)
Tree19 <- ftsummation(19, "Habitat", "T", 18)
makeHM(9, Tree20)
Nat19 <- ftsummation(19, "N_I", "1", 18)
Nat20 <- ftsummation(20, "N_I", "1", 7)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
Nat19 <- ftsummation(19, "N_I", "1", 18)
Nat20 <- ftsummation(20, "N_I", "1", 7)
makeHM(10, Nat19)
makeHM(11, Nat20)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
Nat19 <- ftsummation(19, "N_I", "1", 18)
Nat20 <- ftsummation(20, "N_I", "1", 7)
Tree19 <- ftsummation(19, "Habitat", "T", 18)
Tree20 <- ftsummation(20, "Habitat", "T", 7)
makeHM(1, DR20)
makeHM(2, SR20)
makeHM(3, DR19)
makeHM(4, SR19)
makeHM(5, Inv20)
makeHM(6, Inv19)
makeHM(7, Tree19)
makeHM(8, Grass19)
makeHM(9, Tree20)
makeHM(10, Nat19)
makeHM(11, Nat20)
Grass19 <- ftsummation(19, "Habitat", ".-*G", 18)
DR19 <- ftsummation(19, "FT", "DR", 18)
SR19 <- ftsummation(19, "FT", "SR", 18)
DR20 <- ftsummation(20, "FT", "DR", 7)
SR20 <- ftsummation(20, "FT", "SR", 7)
Inv19 <- ftsummation(19, "N_I", "0", 18)
Inv20 <- ftsummation(20, "N_I", "0", 7)
Nat19 <- ftsummation(19, "N_I", "1", 18)
Nat20 <- ftsummation(20, "N_I", "1", 7)
Tree19 <- ftsummation(19, "Habitat", "T", 18)
Tree20 <- ftsummation(20, "Habitat", "T", 7)
Grass19 <- ftsummation(19, "Habitat", ".-*G", 18)
makeHM(1, DR20)
makeHM(2, SR20)
makeHM(3, DR19)
makeHM(4, SR19)
makeHM(5, Inv20)
makeHM(6, Inv19)
makeHM(7, Tree19)
makeHM(8, Grass19)
makeHM(9, Tree20)
makeHM(10, Nat19)
makeHM(11, Nat20)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
All20 <- ftsummation(20, "N_I", "", 7)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
makeHM(12, All20)
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
allplants(20, 7, "WS")
allplants(19, 18, "WS")
UPL20 <- ftsummation(20, "WS", "UPL", 7)
OBL20 <- ftsummation(20, "WS", "OBL", 7)
FACU20 <- ftsummation(20, "WS", "FACU", 7)
FACU20 <- ftsummation(20, "WS", "FACW", 7)
UPL20 <- ftsummation(20, "WS", "UPL", 7)
OBL20 <- ftsummation(20, "WS", "OBL", 7)
FACU20 <- ftsummation(20, "WS", "FACU", 7)
FACW20 <- ftsummation(20, "WS", "FACW", 7)
FACC20 <- FACU20 + FACW20
WetHappy20 <- FACU20 + FACW20 + OBL20
WS_Balance <- WetHappy20/UPL20
WS20_Balance <- WetHappy20/UPL20
UPL20 <- ftsummation(20, "WS", "UPL", 7)
OBL20 <- ftsummation(20, "WS", "OBL", 7)
FACU20 <- ftsummation(20, "WS", "FACU", 7)
FACW20 <- ftsummation(20, "WS", "FACW", 7)
WetHappy20 <- FACU20 + FACW20 + OBL20
WS20_Balance <- WetHappy20/UPL20
source(file.path(getwd(), "Plant_Locations", "matrix-functions.R"))
UPL20 <- ftsummation(20, "WS", "UPL", 7)
OBL20 <- ftsummation(20, "WS", "OBL", 7)
FACU20 <- ftsummation(20, "WS", "FACU", 7)
FACW20 <- ftsummation(20, "WS", "FACW", 7)
WetHappy20 <- FACU20 + FACW20 + OBL20
WS20_Balance <- WetHappy20/UPL20
View(WS20_Balance)
HMdata = WS20_Balance
i = 1
FT = c("WS20_Balance")
type = c("Functional Type Dominance")
CH = c(20)
#i = what position in FT your data is
#HMdata = name of the matrix you want to run, must be equal to FT[i]
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(brewer.pal(9, "Greens"))(256)
colseq <- seq(0,max(HMdata)+1,by=1)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
View(WetHappy20)
View(UPL20)
g <- WS20_Balance*WS20_Balance
g <- WS20_Balance*WS20_Balance
sum(g)
WS20_Balance[6,1]=5
WS20_Balance[6,1]=5
WS20_Balance[7,1]=5
g <- WS20_Balance*WS20_Balance
sum(g)
sqrt(sum(g))
magWSB <- sqrt(sum(g)) #9.419808
WS_Bnorm <- WS20_Balance/magWSB
View(WS_Bnorm)
View(WS20_Balance)
View(WetHappy20)
View(UPL20)
HMdata = WS_Bnorm
i = 1
FT = c("WS_Bnorm")
type = c("Functional Type Dominance")
CH = c(20)
#i = what position in FT your data is
#HMdata = name of the matrix you want to run, must be equal to FT[i]
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(brewer.pal(9, "Greens"))(256)
colseq <- seq(0,max(HMdata)+1,by=1)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(brewer.pal(9, "Greens"))(256)
colseq <- seq(0,max(HMdata)+1,by=.01)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(brewer.pal(9, "Greens"))(256)
colseq <- seq(0,max(HMdata)+.01,by=.01)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(brewer.pal(9, "RdBu"))(256)
colseq <- seq(0,max(HMdata)+.01,by=.01)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
pal <- colorRamp("EF8C5D", "F7F7F7", "6792CF")(256)
pal <- colorRamp("#EF8C5D", "#F7F7F7", "#6792CF")(256)
pal <- colorRamp(c("#EF8C5D", "#F7F7F7", "#6792CF"))(256)
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRamp(c("#EF8C5D", "#F7F7F7", "#6792CF"))(256)
colseq <- seq(0,max(HMdata)+.01,by=.01)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
View(pal)
pal <- colorRamp(c("#EF8C5D", "#F7F7F7", "#6792CF"))(256)
pal <- colorRamp(c("#EF8C5D", "#F7F7F7", "#6792CF"))(256)
pal <- colorRamp(c("#EF8C5D", "#6792CF"))(256)
pal <- colorRamp(c("#EF8C5D", "#6792CF"))(25)
pal <- colorRamp(c("red", "green"))(256)
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRamp(c("red", "green"))(256)
#pal <- colorRamp(c("#EF8C5D", "#F7F7F7", "#6792CF"))(256)
colseq <- seq(0,max(HMdata)+.01,by=.01)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(brewer.pal(9, "Greens"))(256)
colseq <- seq(0,max(HMdata) + 0.01, by = 0.01)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(brewer.pal(9, "RdYlGn"))(256)
colseq <- seq(0,max(HMdata) + 0.01, by = 0.01)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
pal <- colorRampPalette(c("#6792CF", "#F7F7F7", "#EF8C5D"))(256)
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(c("#6792CF", "#F7F7F7", "#EF8C5D"))(256)
colseq <- seq(0,max(HMdata) + 0.01, by = 0.01)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(c("#EF8C5D", "#F7F7F7", "#6792CF"))(256)
colseq <- seq(0,max(HMdata) + 0.01, by = 0.01)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
title <- paste("C", CH[i], " Functional Type Diversity: \n ", type[i], " Species", sep="")
pal <- colorRampPalette(c("#EF8C5D", "#FFFF", "#6792CF"))(256)
colseq <- seq(0,max(HMdata) + 0.01, by = 0.01)
colnames(HMdata)  <- c("Bed","Bank", "Upland")
png(filename = file.path(getwd(),
"Plant_Locations",
paste("C", CH[i], FT[i], ".png", sep="")
),
width = 460,
height = 550)
print(levelplot(HMdata,
col.regions=pal,
ylab = "Horizontal Distribution",
xlab = "Transect (1 = Outfall)",
colorkey = list(at = colseq, labels=list(at=colseq)),
main = title))
dev.off()
